#%RAML 1.0

title: Game service
version: v0.1
mediaType: application/json
baseUri: /game-service/v1

annotationTypes:
  dontGenerate: nil
  javaName: string

types:
    User:
        type: object
        properties:
            id:
                type: string
                required: false
            username:
                type: string
                required: true
                minLength: 3
                maxLength: 25
            email:
                type: string
                required: true
                minLength: 3
                maxLength: 50
            password:
                type: string
                required: true
                minLength: 3
            type:
                type: string
                enum: [user, admin]
                required: true
                default: user
    UserDetails:
        type: object
        properties:
            user:
                type: User
                required: true
            gameplays:
                type: UserGameplay[]
    Login:
        type: object
        properties:
            name:
                type: string
                required: true
            password:
                type: string
                required: true

    Game:
        type: object
        properties:
            id:
                type: string
            name:
                type: string
            description:
                type: string
            minPlayers:
                type: integer
            maxPlayers:
                type: integer
            rating:
                type: number
            ratingCount:
                type: integer
    GameInvite:
        type: object
        properties:
            gameId:
                type: string
            userIds:
                type: string[]
    Gameplay:
        type: object
        properties:
            id:
                type: string
            game:
                type: Game
            users:
                type: User[]
            nextTurn:
                type: User
            status:
                type: string
                enum: [inProgress, finished]
            winners:
                type: User[]
                required: false
            gameState:
                type: GameState
    UserGameplay:
        type: object
        properties:
            userIdx:
                type: integer
            gameplay:
                type: Gameplay
    GameState:
        type: string
        description: Common type for game state objects. The game state corresponding to the given game is used.
    GameTurn:
        type: string
        description: Common type for game turn objects. The game turn corresponding to the given game is used.

traits:
    generalErrorHandled:
        responses:
            400:
                description: Request body validation failed
            401:
                description: User doesn't have permission for action
            500:
                description: Internal server error during operation

securitySchemes:
    cookie-auth-admin:
        description: |
            Authentication scheme for session cookie. User needs to be admin.
        type:
            x-cookie
        describedBy:
            headers:
                Cookie:
                    description: |
                        Session cookie
                    type: string
    cookie-auth-user:
        description: |
            Authentication scheme for session cookie.
        type:
            x-cookie
        describedBy:
            headers:
                Cookie:
                    description: |
                        Session cookie
                    type: string
    cookie-auth-self:
        description: |
            Authentication scheme for session cookie. User needs to be logged in as requested user, or be admin.
        type:
            x-cookie
        describedBy:
            headers:
                Cookie:
                    description: |
                        Session cookie
                    type: string

/users:
    description: Interact with User resources
    get:
        (javaName): getAllUsers
        description: Retrieves a list of registered users
        securedBy: [cookie-auth-admin]
        is: [generalErrorHandled]
        responses:
            200:
                body:
                    application/json:
                        type: User[]
    /register:
        post:
            (javaName): registerUser
            description: Registers a new user, admin users can only be registered by other admins
            body:
                application/json:
                    type: User
            is: [generalErrorHandled]
            responses:
                200:
                    description: User registered successfully
                    body:
                        application/json:
                            type: User
    /login:
        (dontGenerate):
        post:
            description: Logs in user
            body:
                application/json:
                    type: Login
            is: [generalErrorHandled]
            responses:
                200:
                    description: User logged in successfully
                    body:
                        application/json:
                            type: UserDetails
    /logout:
        (dontGenerate):
        post:
            description: Logs out current user
            responses:
                302:
                    description: Logged out successfully, redirect to /
    /current:
        get:
            (javaName): getCurrentUser
            securedBy: [cookie-auth-user]
            description: Get details for logged in user
            is: [generalErrorHandled]
            responses:
                200:
                    body:
                        application/json:
                            type: UserDetails
    /{userId}:
        get:
            (javaName): getUserById
            securedBy: [cookie-auth-self]
            description: Gets user details
            is: [generalErrorHandled]
            responses:
                200:
                    body:
                        application/json:
                            type: UserDetails
# TODO change user details endpoint
# TODO ban user endpoint

/games:
    description: Interact with Game resources
    get:
        (javaName): getAllGames
        description: Retrieves a list of available games
        is: [generalErrorHandled]
        responses:
            200:
                body:
                    application/json:
                        type: Game[]
    /{gameId}:
        get:
            (javaName): getGameById
            description: Gets game details
            is: [generalErrorHandled]
            responses:
                200:
                    body:
                        application/json:
                            type: Game
        /queue:
            post:
                (javaName): joinGameQueue
                securedBy: [cookie-auth-user]
                description: Join a game queue
                is: [generalErrorHandled]
                responses:
                    200:
                        body:
                            application/json:
                                type: integer
                                description: Number of players waiting in queue for the game
        /unqueue:
            post:
                (javaName): leaveGameQueue
                securedBy: [cookie-auth-user]
                description: Join a game queue
                is: [generalErrorHandled]
                responses:
                    200:
                        description: User left game queue successfully

/gameplays:
    description: Interact with Gameplay resources
    /{gameplayId}:
        get:
            (javaName): getGameplayById
            description: Gets Gameplay details
            is: [generalErrorHandled]
            responses:
                200:
                    body:
                        application/json:
                            type: Gameplay
        /playturn:
            post:
                (javaName): playGameTurn
                securedBy: [cookie-auth-user]
                description: Play a game turn
                body:
                    application/json:
                        type: GameTurn
                is: [generalErrorHandled]
                responses:
                    200:
                        description: User left game queue successfully
                        body:
                            type: GameState

